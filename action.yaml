name: "Pie Code Changes Tracker"
description: "Automatically track and upload PR code changes to Pie"
author: "Pie"

inputs:
  pie_api_key:
    description: "Pie API Key for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Extract and Upload Code Changes
      shell: bash
      run: |
        # Extract PR information from GitHub context
        REPOSITORY="${{ github.repository }}"
        MERGE_COMMIT="${{ github.sha }}"
        
        # Check if this is a pull_request event
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          MERGE_COMMIT="${{ github.event.pull_request.merge_commit_sha || github.sha }}"
        else
          # For push events, fetch PR info from the commit
          pr_data=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ github.token }}" \
            "https://api.github.com/repos/$REPOSITORY/commits/$MERGE_COMMIT/pulls")
          
          if [ "$(echo "$pr_data" | jq '. | length')" -gt 0 ]; then
            PR_NUMBER=$(echo "$pr_data" | jq -r '.[0].number')
            PR_TITLE=$(echo "$pr_data" | jq -r '.[0].title')
            PR_URL=$(echo "$pr_data" | jq -r '.[0].html_url')
            AUTHOR=$(echo "$pr_data" | jq -r '.[0].user.login')
          else
            # Try to extract PR number from commit message (e.g., "Merge pull request #123")
            commit_message="${{ github.event.head_commit.message }}"
            if [[ "$commit_message" =~ \#([0-9]+) ]]; then
              PR_NUMBER="${BASH_REMATCH[1]}"
              PR_TITLE="$commit_message"
              PR_URL="https://github.com/$REPOSITORY/pull/$PR_NUMBER"
              AUTHOR="${{ github.actor }}"
            else
              # No PR found - this might be a direct push
              AUTHOR="${{ github.actor }}"
              PR_NUMBER=""
              PR_TITLE="$commit_message"
              PR_URL=""
            fi
          fi
        fi

        echo "Tracking code changes for PR #$PR_NUMBER in $REPOSITORY"

        # Validate required fields
        if [ -z "$PR_NUMBER" ]; then
          echo "Error: PR number not found. Unable to track code changes without PR information."
          exit 1
        fi

        # Prepare JSON payload using jq to properly escape values
        json_payload=$(jq -n \
          --arg author "$AUTHOR" \
          --arg mergeCommit "$MERGE_COMMIT" \
          --arg prNumber "$PR_NUMBER" \
          --arg prTitle "$PR_TITLE" \
          --arg prUrl "$PR_URL" \
          --arg repository "$REPOSITORY" \
          '{
            author: $author,
            mergeCommit: $mergeCommit,
            prNumber: $prNumber,
            prTitle: $prTitle,
            prUrl: $prUrl,
            repository: $repository
          }')

        # Upload to Pie API
        response=$(curl -X POST \
          "https://api.pie.inc/v1/app/codechanges" \
          -H "accept: application/json" \
          -H "Content-Type: application/json" \
          -H "X-Requested-With: XMLHttpRequest" \
          -H "X-API-Key: ${{ inputs.pie_api_key }}" \
          -d "$json_payload" \
          -w "\nHTTP_STATUS:%{http_code}" \
          -s)

        # Extract HTTP status code
        http_code=$(echo "$response" | grep "HTTP_STATUS:" | cut -d':' -f2)
        response_body=$(echo "$response" | sed '/HTTP_STATUS:/d')

        # Check for successful response (200 or 201)
        if [ "$http_code" != "200" ] && [ "$http_code" != "201" ]; then
          echo "Error: Failed to upload code changes (HTTP $http_code)"
          exit 1
        fi

        echo "âœ“ Successfully tracked code changes for PR #$PR_NUMBER"

branding:
  icon: "git-pull-request"
  color: "purple"

